--
-- PostgreSQL database dump
--

SET statement_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = off;
SET check_function_bodies = false;
SET client_min_messages = warning;
SET escape_string_warning = off;

SET search_path = public, pg_catalog;

SET default_tablespace = '';

SET default_with_oids = false;

--
-- Name: category; Type: TABLE; Schema: public; Owner: nf; Tablespace: 
--

CREATE TABLE category (
    id integer NOT NULL,
    code character varying(255) NOT NULL,
    name character varying(255) NOT NULL,
    marker boolean NOT NULL,
    root boolean NOT NULL,
    standard boolean NOT NULL,
    parentid integer
);


ALTER TABLE public.category OWNER TO nf;

--
-- Name: clip; Type: TABLE; Schema: public; Owner: nf; Tablespace: 
--

CREATE TABLE clip (
    id integer NOT NULL,
    code character varying(255),
    created timestamp without time zone,
    filename character varying(255) NOT NULL,
    start integer NOT NULL,
    type character varying(255),
    event_id integer,
    person_id integer,
    team_id integer
);


ALTER TABLE public.clip OWNER TO nf;

--
-- Name: clip_category; Type: TABLE; Schema: public; Owner: nf; Tablespace: 
--

CREATE TABLE clip_category (
    clip_id integer NOT NULL,
    categories_id integer NOT NULL
);


ALTER TABLE public.clip_category OWNER TO nf;

--
-- Name: clip_comment; Type: TABLE; Schema: public; Owner: nf; Tablespace: 
--

CREATE TABLE clip_comment (
    clip_id integer NOT NULL,
    comments_id integer NOT NULL
);


ALTER TABLE public.clip_comment OWNER TO nf;

--
-- Name: clip_playlist; Type: TABLE; Schema: public; Owner: nf; Tablespace: 
--

CREATE TABLE clip_playlist (
    clip_id integer NOT NULL,
    playlists_id integer NOT NULL
);


ALTER TABLE public.clip_playlist OWNER TO nf;

--
-- Name: comment; Type: TABLE; Schema: public; Owner: nf; Tablespace: 
--

CREATE TABLE comment (
    id integer NOT NULL,
    body character varying(255) NOT NULL,
    lastupdated timestamp without time zone,
    owner_id integer
);


ALTER TABLE public.comment OWNER TO nf;

--
-- Name: document; Type: TABLE; Schema: public; Owner: nf; Tablespace: 
--

CREATE TABLE document (
    id integer NOT NULL,
    code character varying(255),
    created timestamp without time zone,
    description text,
    path character varying(255),
    title character varying(255)
);


ALTER TABLE public.document OWNER TO nf;

--
-- Name: document_category; Type: TABLE; Schema: public; Owner: nf; Tablespace: 
--

CREATE TABLE document_category (
    document_id integer NOT NULL,
    categories_id integer NOT NULL
);


ALTER TABLE public.document_category OWNER TO nf;

--
-- Name: event; Type: TABLE; Schema: public; Owner: nf; Tablespace: 
--

CREATE TABLE event (
    id integer NOT NULL,
    code character varying(255) NOT NULL,
    name character varying(255) NOT NULL,
    date timestamp without time zone,
    location character varying(255),
    awayteam_id integer,
    hometeam_id integer
);


ALTER TABLE public.event OWNER TO nf;

--
-- Name: hibernate_sequence; Type: SEQUENCE; Schema: public; Owner: nf
--

CREATE SEQUENCE hibernate_sequence
    START WITH 1
    INCREMENT BY 1
    NO MAXVALUE
    NO MINVALUE
    CACHE 1;


ALTER TABLE public.hibernate_sequence OWNER TO nf;

--
-- Name: hibernate_sequence; Type: SEQUENCE SET; Schema: public; Owner: nf
--

SELECT pg_catalog.setval('hibernate_sequence', 41, true);


--
-- Name: person; Type: TABLE; Schema: public; Owner: nf; Tablespace: 
--

CREATE TABLE person (
    id integer NOT NULL,
    code character varying(255) NOT NULL,
    name character varying(255) NOT NULL
);


ALTER TABLE public.person OWNER TO nf;

--
-- Name: playlist; Type: TABLE; Schema: public; Owner: nf; Tablespace: 
--

CREATE TABLE playlist (
    id integer NOT NULL,
    code character varying(255) NOT NULL,
    name character varying(255) NOT NULL,
    description character varying(255),
    lastupdated timestamp without time zone,
    owner_id integer
);


ALTER TABLE public.playlist OWNER TO nf;

--
-- Name: playlist_usertable; Type: TABLE; Schema: public; Owner: nf; Tablespace: 
--

CREATE TABLE playlist_usertable (
    playlist_id integer NOT NULL,
    users_id integer NOT NULL
);


ALTER TABLE public.playlist_usertable OWNER TO nf;

--
-- Name: team; Type: TABLE; Schema: public; Owner: nf; Tablespace: 
--

CREATE TABLE team (
    id integer NOT NULL,
    code character varying(255) NOT NULL,
    name character varying(255) NOT NULL
);


ALTER TABLE public.team OWNER TO nf;

--
-- Name: usertable; Type: TABLE; Schema: public; Owner: nf; Tablespace: 
--

CREATE TABLE usertable (
    id integer NOT NULL,
    email character varying(255),
    firstname character varying(255),
    lastname character varying(255),
    password character varying(255),
    username character varying(255) NOT NULL,
    userrole character varying(255)
);


ALTER TABLE public.usertable OWNER TO nf;

--
-- Data for Name: category; Type: TABLE DATA; Schema: public; Owner: nf
--

COPY category (id, code, name, marker, root, standard, parentid) FROM stdin;
2	stoptouch	Stoptouch	f	f	f	\N
3	heading	Heading	f	f	f	\N
4	utsidetouch	Utsidetouch	f	f	f	\N
6	etablert	Etablert	f	f	t	\N
7	overgang	Overgang	f	f	t	\N
5	innsidetouch	Innsidetouch	f	f	f	\N
8	basis	Basis	f	f	f	\N
9	mentalitet	Mentalitet	f	f	f	\N
24	tempotouch	Tempotouch	f	f	f	\N
37	ferdighetsutvikling	Ferdighetsutvikling	f	f	f	\N
\.


--
-- Data for Name: clip; Type: TABLE DATA; Schema: public; Owner: nf
--

COPY clip (id, code, created, filename, start, type, event_id, person_id, team_id) FROM stdin;
25	cp7LJdIAe3GK	2011-01-16 16:13:48.97	cyidtVLRo0Rg.mp4	0	REFERENCE	14	18	10
26	ch2s8MDeLGFm	2011-01-16 16:14:54.609	cJR5qS9dogqY.mp4	0	REFERENCE	14	19	10
27	ccaLHTe2y5Zo	2011-01-16 16:15:49.734	c0CrGs0aeH2f.mp4	0	REFERENCE	14	20	11
28	cE9eh42bvjdG	2011-01-16 16:17:12.942	cjMehqqZg1IL.mp4	0	REFERENCE	14	18	10
29	cp7zHqMhTDMp	2011-01-16 16:18:01.543	cSfhMBHSlj3z.mp4	0	REFERENCE	14	18	10
30	clCkPXrKCf8a	2011-01-16 16:18:43.527	cNBtLeqIRWRs.mp4	0	REFERENCE	14	18	10
31	chLvtb5LecXV	2011-01-16 16:19:05.059	cQ2NW02uqppi.mp4	0	REFERENCE	14	21	10
32	cp6XCAhbVxL5	2011-01-16 16:19:32.552	cilqC7pFLtsZ.mp4	0	REFERENCE	14	22	11
33	cEf7ehGBkUHu	2011-01-16 16:37:30.919	cojFjjyysHkb.mp4	0	REFERENCE	16	18	10
34	clcuzjk6gdz1	2011-01-16 16:39:42.853	c6hvlL1PP0JT.mp4	0	REFERENCE	16	18	10
35	cx0tBgnyeSz3	2011-01-16 16:41:00.624	c1zMIPOBHB9r.mp4	0	REFERENCE	16	19	10
36	cnSkjz0jcJNj	2011-01-16 16:41:55.739	cIh7JR3eJkTN.mp4	0	REFERENCE	16	19	10
\.


--
-- Data for Name: clip_category; Type: TABLE DATA; Schema: public; Owner: nf
--

COPY clip_category (clip_id, categories_id) FROM stdin;
25	5
26	2
26	5
27	3
28	4
29	5
30	4
31	3
32	3
33	6
33	5
34	6
34	24
34	5
34	4
35	24
35	5
36	24
36	5
\.


--
-- Data for Name: clip_comment; Type: TABLE DATA; Schema: public; Owner: nf
--

COPY clip_comment (clip_id, comments_id) FROM stdin;
\.


--
-- Data for Name: clip_playlist; Type: TABLE DATA; Schema: public; Owner: nf
--

COPY clip_playlist (clip_id, playlists_id) FROM stdin;
\.


--
-- Data for Name: comment; Type: TABLE DATA; Schema: public; Owner: nf
--

COPY comment (id, body, lastupdated, owner_id) FROM stdin;
\.


--
-- Data for Name: document; Type: TABLE DATA; Schema: public; Owner: nf
--

COPY document (id, code, created, description, path, title) FROM stdin;
38	dwac1F0vjnbV	2011-01-16 16:43:21.628	Tema læring og ferdighetsutvikling griper rett inn i kjernen for fysioterapeuters kompetanseområde. Boken forklarer utvikling og læring ut fra biologi og utvikling av ferdigheter ut fra psykologi og pedagogikk.\r\n	dTE7fzcpN9An.pdf	Kunsten å lære seg ferdigheter
40	d2EcQU7MLshC	2011-01-16 16:45:12.104	Number of ball touches in professional football	dx4b9NzbaFe9.pdf	Number of ball touches in professional football
41	dLngC0tKv3oM	2011-01-16 16:47:03.821	I begrepet mentalitet legges det ulike betydninger. Det kan eksempelvis bety å være en\r\ngod lagspiller  eller det kan innebære å spille med innsiden av hodet eller med en riktig\r\nmental innstilling. Vi skal her utdype viktigheten av den mentale innstillingen nærmere. Riktig mentalitet i all idrett handler om hvor mye selvtillit som er nødvendig for at en spiller eller et lag, skal kunne nå sine målsetninger. Man kan da si at et godt mål på styrken i selvtilliten henger nært sammen med de konkrete målsetninger man setter seg. Målsetninger må da være spesifikke og målbare og helst være definert av utøveren eller av utøverne selv. I tillegg må man også sette opp konkrete prestasjonsmål, som er nødvendig prosessmål for å lykkes å nå den langsiktige målsetningen. Skal man lykkes kreves det selvsagt at man har tilrettelagt et godt lærings- og utviklingsmiljø for å muliggjøre denne satsningen.	dFbHxOIdJEiE.pdf	Talentutvikling mentalitet fotball 
\.


--
-- Data for Name: document_category; Type: TABLE DATA; Schema: public; Owner: nf
--

COPY document_category (document_id, categories_id) FROM stdin;
38	37
40	2
40	24
40	5
40	4
41	9
\.


--
-- Data for Name: event; Type: TABLE DATA; Schema: public; Owner: nf
--

COPY event (id, code, name, date, location, awayteam_id, hometeam_id) FROM stdin;
15	eLT5UdpCaiqW	Barcelona - Manchester United	2009-07-01 00:00:00	Roma	12	10
16	eZcn1niSaRHk	Arsenal - Barcelona	2010-01-01 00:00:00	Emirates	10	13
14	egyNxCQMxGQq	Real Madrid - Barcelona	2009-06-01 00:00:00	Santiago Bernabeu	10	11
\.


--
-- Data for Name: person; Type: TABLE DATA; Schema: public; Owner: nf
--

COPY person (id, code, name) FROM stdin;
18	lionelmessi	Lionel Messi
19	xavihernandez	Xavi Hernandez
20	gonzalohiguain	Gonzalo Higuain
21	carlespuyol	Carles Puyol
22	sergioramos	Sergio Ramos
\.


--
-- Data for Name: playlist; Type: TABLE DATA; Schema: public; Owner: nf
--

COPY playlist (id, code, name, description, lastupdated, owner_id) FROM stdin;
\.


--
-- Data for Name: playlist_usertable; Type: TABLE DATA; Schema: public; Owner: nf
--

COPY playlist_usertable (playlist_id, users_id) FROM stdin;
\.


--
-- Data for Name: team; Type: TABLE DATA; Schema: public; Owner: nf
--

COPY team (id, code, name) FROM stdin;
10	barcelona	Barcelona
11	realmadrid	Real Madrid
12	manchesterunited	Manchester United
13	arsenal	Arsenal
\.


--
-- Data for Name: usertable; Type: TABLE DATA; Schema: public; Owner: nf
--

COPY usertable (id, email, firstname, lastname, password, username, userrole) FROM stdin;
1	larshelge@gmail.com	Lars	Overland	overland	lars	ROLE_ADMIN
23	pep@fcbarcelona.sp	Pep	Guardiola	guardiola	pep	ROLE_MANAGER
\.


--
-- Name: category_code_key; Type: CONSTRAINT; Schema: public; Owner: nf; Tablespace: 
--

ALTER TABLE ONLY category
    ADD CONSTRAINT category_code_key UNIQUE (code);


--
-- Name: category_pkey; Type: CONSTRAINT; Schema: public; Owner: nf; Tablespace: 
--

ALTER TABLE ONLY category
    ADD CONSTRAINT category_pkey PRIMARY KEY (id);


--
-- Name: clip_category_pkey; Type: CONSTRAINT; Schema: public; Owner: nf; Tablespace: 
--

ALTER TABLE ONLY clip_category
    ADD CONSTRAINT clip_category_pkey PRIMARY KEY (clip_id, categories_id);


--
-- Name: clip_code_key; Type: CONSTRAINT; Schema: public; Owner: nf; Tablespace: 
--

ALTER TABLE ONLY clip
    ADD CONSTRAINT clip_code_key UNIQUE (code);


--
-- Name: clip_comment_comments_id_key; Type: CONSTRAINT; Schema: public; Owner: nf; Tablespace: 
--

ALTER TABLE ONLY clip_comment
    ADD CONSTRAINT clip_comment_comments_id_key UNIQUE (comments_id);


--
-- Name: clip_comment_pkey; Type: CONSTRAINT; Schema: public; Owner: nf; Tablespace: 
--

ALTER TABLE ONLY clip_comment
    ADD CONSTRAINT clip_comment_pkey PRIMARY KEY (clip_id, comments_id);


--
-- Name: clip_pkey; Type: CONSTRAINT; Schema: public; Owner: nf; Tablespace: 
--

ALTER TABLE ONLY clip
    ADD CONSTRAINT clip_pkey PRIMARY KEY (id);


--
-- Name: clip_playlist_pkey; Type: CONSTRAINT; Schema: public; Owner: nf; Tablespace: 
--

ALTER TABLE ONLY clip_playlist
    ADD CONSTRAINT clip_playlist_pkey PRIMARY KEY (clip_id, playlists_id);


--
-- Name: comment_pkey; Type: CONSTRAINT; Schema: public; Owner: nf; Tablespace: 
--

ALTER TABLE ONLY comment
    ADD CONSTRAINT comment_pkey PRIMARY KEY (id);


--
-- Name: document_pkey; Type: CONSTRAINT; Schema: public; Owner: nf; Tablespace: 
--

ALTER TABLE ONLY document
    ADD CONSTRAINT document_pkey PRIMARY KEY (id);


--
-- Name: event_code_key; Type: CONSTRAINT; Schema: public; Owner: nf; Tablespace: 
--

ALTER TABLE ONLY event
    ADD CONSTRAINT event_code_key UNIQUE (code);


--
-- Name: event_pkey; Type: CONSTRAINT; Schema: public; Owner: nf; Tablespace: 
--

ALTER TABLE ONLY event
    ADD CONSTRAINT event_pkey PRIMARY KEY (id);


--
-- Name: person_code_key; Type: CONSTRAINT; Schema: public; Owner: nf; Tablespace: 
--

ALTER TABLE ONLY person
    ADD CONSTRAINT person_code_key UNIQUE (code);


--
-- Name: person_pkey; Type: CONSTRAINT; Schema: public; Owner: nf; Tablespace: 
--

ALTER TABLE ONLY person
    ADD CONSTRAINT person_pkey PRIMARY KEY (id);


--
-- Name: playlist_code_key; Type: CONSTRAINT; Schema: public; Owner: nf; Tablespace: 
--

ALTER TABLE ONLY playlist
    ADD CONSTRAINT playlist_code_key UNIQUE (code);


--
-- Name: playlist_pkey; Type: CONSTRAINT; Schema: public; Owner: nf; Tablespace: 
--

ALTER TABLE ONLY playlist
    ADD CONSTRAINT playlist_pkey PRIMARY KEY (id);


--
-- Name: playlist_usertable_pkey; Type: CONSTRAINT; Schema: public; Owner: nf; Tablespace: 
--

ALTER TABLE ONLY playlist_usertable
    ADD CONSTRAINT playlist_usertable_pkey PRIMARY KEY (playlist_id, users_id);


--
-- Name: team_code_key; Type: CONSTRAINT; Schema: public; Owner: nf; Tablespace: 
--

ALTER TABLE ONLY team
    ADD CONSTRAINT team_code_key UNIQUE (code);


--
-- Name: team_pkey; Type: CONSTRAINT; Schema: public; Owner: nf; Tablespace: 
--

ALTER TABLE ONLY team
    ADD CONSTRAINT team_pkey PRIMARY KEY (id);


--
-- Name: usertable_pkey; Type: CONSTRAINT; Schema: public; Owner: nf; Tablespace: 
--

ALTER TABLE ONLY usertable
    ADD CONSTRAINT usertable_pkey PRIMARY KEY (id);


--
-- Name: usertable_username_key; Type: CONSTRAINT; Schema: public; Owner: nf; Tablespace: 
--

ALTER TABLE ONLY usertable
    ADD CONSTRAINT usertable_username_key UNIQUE (username);


--
-- Name: fk16715de11c34699b; Type: FK CONSTRAINT; Schema: public; Owner: nf
--

ALTER TABLE ONLY clip_playlist
    ADD CONSTRAINT fk16715de11c34699b FOREIGN KEY (playlists_id) REFERENCES playlist(id);


--
-- Name: fk16715de193239e4a; Type: FK CONSTRAINT; Schema: public; Owner: nf
--

ALTER TABLE ONLY clip_playlist
    ADD CONSTRAINT fk16715de193239e4a FOREIGN KEY (clip_id) REFERENCES clip(id);


--
-- Name: fk2c9490d65007610d; Type: FK CONSTRAINT; Schema: public; Owner: nf
--

ALTER TABLE ONLY playlist_usertable
    ADD CONSTRAINT fk2c9490d65007610d FOREIGN KEY (users_id) REFERENCES usertable(id);


--
-- Name: fk2c9490d67ed02f0a; Type: FK CONSTRAINT; Schema: public; Owner: nf
--

ALTER TABLE ONLY playlist_usertable
    ADD CONSTRAINT fk2c9490d67ed02f0a FOREIGN KEY (playlist_id) REFERENCES playlist(id);


--
-- Name: fk8443cfa285c6c9ac; Type: FK CONSTRAINT; Schema: public; Owner: nf
--

ALTER TABLE ONLY document_category
    ADD CONSTRAINT fk8443cfa285c6c9ac FOREIGN KEY (categories_id) REFERENCES category(id);


--
-- Name: fk8443cfa2db1afe6a; Type: FK CONSTRAINT; Schema: public; Owner: nf
--

ALTER TABLE ONLY document_category
    ADD CONSTRAINT fk8443cfa2db1afe6a FOREIGN KEY (document_id) REFERENCES document(id);


--
-- Name: fk_category_parent; Type: FK CONSTRAINT; Schema: public; Owner: nf
--

ALTER TABLE ONLY category
    ADD CONSTRAINT fk_category_parent FOREIGN KEY (parentid) REFERENCES category(id);


--
-- Name: fk_clip_comment; Type: FK CONSTRAINT; Schema: public; Owner: nf
--

ALTER TABLE ONLY clip_comment
    ADD CONSTRAINT fk_clip_comment FOREIGN KEY (clip_id) REFERENCES clip(id);


--
-- Name: fk_clip_event; Type: FK CONSTRAINT; Schema: public; Owner: nf
--

ALTER TABLE ONLY clip
    ADD CONSTRAINT fk_clip_event FOREIGN KEY (event_id) REFERENCES event(id);


--
-- Name: fk_clip_person; Type: FK CONSTRAINT; Schema: public; Owner: nf
--

ALTER TABLE ONLY clip
    ADD CONSTRAINT fk_clip_person FOREIGN KEY (person_id) REFERENCES person(id);


--
-- Name: fk_clip_team; Type: FK CONSTRAINT; Schema: public; Owner: nf
--

ALTER TABLE ONLY clip
    ADD CONSTRAINT fk_clip_team FOREIGN KEY (team_id) REFERENCES team(id);


--
-- Name: fk_comment_user; Type: FK CONSTRAINT; Schema: public; Owner: nf
--

ALTER TABLE ONLY comment
    ADD CONSTRAINT fk_comment_user FOREIGN KEY (owner_id) REFERENCES usertable(id);


--
-- Name: fk_event_awayteam_team; Type: FK CONSTRAINT; Schema: public; Owner: nf
--

ALTER TABLE ONLY event
    ADD CONSTRAINT fk_event_awayteam_team FOREIGN KEY (awayteam_id) REFERENCES team(id);


--
-- Name: fk_event_hometeam_team; Type: FK CONSTRAINT; Schema: public; Owner: nf
--

ALTER TABLE ONLY event
    ADD CONSTRAINT fk_event_hometeam_team FOREIGN KEY (hometeam_id) REFERENCES team(id);


--
-- Name: fk_playlist_user; Type: FK CONSTRAINT; Schema: public; Owner: nf
--

ALTER TABLE ONLY playlist
    ADD CONSTRAINT fk_playlist_user FOREIGN KEY (owner_id) REFERENCES usertable(id);


--
-- Name: fka96d990d85c6c9ac; Type: FK CONSTRAINT; Schema: public; Owner: nf
--

ALTER TABLE ONLY clip_category
    ADD CONSTRAINT fka96d990d85c6c9ac FOREIGN KEY (categories_id) REFERENCES category(id);


--
-- Name: fka96d990d93239e4a; Type: FK CONSTRAINT; Schema: public; Owner: nf
--

ALTER TABLE ONLY clip_category
    ADD CONSTRAINT fka96d990d93239e4a FOREIGN KEY (clip_id) REFERENCES clip(id);


--
-- Name: fkc77d470d34b5515; Type: FK CONSTRAINT; Schema: public; Owner: nf
--

ALTER TABLE ONLY clip_comment
    ADD CONSTRAINT fkc77d470d34b5515 FOREIGN KEY (comments_id) REFERENCES comment(id);


--
-- Name: public; Type: ACL; Schema: -; Owner: postgres
--

REVOKE ALL ON SCHEMA public FROM PUBLIC;
REVOKE ALL ON SCHEMA public FROM postgres;
GRANT ALL ON SCHEMA public TO postgres;
GRANT ALL ON SCHEMA public TO PUBLIC;


--
-- PostgreSQL database dump complete
--

