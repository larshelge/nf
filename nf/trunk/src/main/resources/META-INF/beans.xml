<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:security="http://www.springframework.org/schema/security"
    xsi:schemaLocation="
	    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.0.xsd">

  <context:component-scan base-package="no.tfs.nf"/>
		   
  <mvc:annotation-driven />
	
  <tx:annotation-driven transaction-manager="transactionManager"/>
  
  <security:global-method-security secured-annotations="enabled" />
  
  <!-- JAXB2 -->
  
  <bean id="marshaller" class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
    <property name="classesToBeBound">
      <list>
        <value>no.tfs.nf.svx.Svx</value>
      </list>
    </property>
    <property name="schema" value="classpath:svx.xsd"/>
  </bean>

  <!-- REST -->
  
  <bean id="marshallingConverter" class="org.springframework.http.converter.xml.MarshallingHttpMessageConverter">
    <property name="marshaller" ref="marshaller" />
    <property name="unmarshaller" ref="marshaller" />
  </bean>
  
  <bean id="stringConverter" class="org.springframework.http.converter.StringHttpMessageConverter"/>
  
  <bean id="restTemplate" class="org.springframework.web.client.RestTemplate">
	<property name="messageConverters">
      <list>
		<ref bean="marshallingConverter"/>
		<ref bean="stringConverter"/>
	  </list>
	</property>
  </bean>
  
  <!-- MVC -->
  
  <mvc:interceptors>
    <mvc:interceptor> 
	  <mvc:mapping path="/*"/> 
      <bean class="no.tfs.nf.interceptor.StaticReferenceInterceptor" /> 
	</mvc:interceptor>
  </mvc:interceptors>
  
  <mvc:view-controller path="/" view-name="forward:references"/>
  <mvc:view-controller path="/login" view-name="login"/>
  <mvc:view-controller path="/about" view-name="maintenance/about"/>
  <mvc:view-controller path="/userRegistration" view-name="user"/>
  <mvc:view-controller path="/userRestoreRequest" view-name="userRestoreRequest"/>
  
  <!-- View resolver -->
  
  <bean class="org.springframework.web.servlet.view.velocity.VelocityViewResolver">
    <property name="prefix" value=""/>
    <property name="suffix" value=".vm"/>
  </bean>
  
  <!-- File upload -->
  
  <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"/>
  
  <!-- Velocity config -->
  
  <bean class="org.springframework.web.servlet.view.velocity.VelocityConfigurer">
    <property name="resourceLoaderPath" value="/WEB-INF/velocity/"/>
	<property name="velocityProperties">
		<props>
			<prop key="velocimacro.library">org/springframework/web/servlet/view/velocity/spring.vm,macros.vm</prop>
		</props>
	</property>
  </bean>
  
  <!-- Security -->
  
  <security:http>
	<security:form-login login-page="/login" default-target-url="/"/>
    <security:http-basic/>
    <security:logout logout-url="/logout" logout-success-url="/"/>
  </security:http>
  
  <security:authentication-manager>
	<security:authentication-provider user-service-ref="userService">
	  <security:password-encoder hash="md5">
        <security:salt-source ref="saltSource" />
      </security:password-encoder>
	</security:authentication-provider>		
  </security:authentication-manager>
  
  <bean id="saltSource" class="org.springframework.security.authentication.dao.SystemWideSaltSource">
	<property name="systemWideSalt" value="nfsa1tsource"/>
  </bean>
  
  <bean id="passwordEncoder" class="org.springframework.security.authentication.encoding.Md5PasswordEncoder"/>
  
  <!-- Transaction -->
  
  <bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
    <property name="sessionFactory" ref="sessionFactory"/>
    <property name="dataSource" ref="dataSource"/>
  </bean>

  <!-- Persistence -->

  <bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
    <property name="dataSource" ref="dataSource"/>
    <property name="hibernateProperties">
      <props>
        <prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQLDialect</prop>
        <!--
        <prop key="hibernate.dialect">org.hibernate.dialect.H2Dialect</prop>
        -->        
        <prop key="hibernate.hbm2ddl.auto">update</prop>
      </props>
    </property>
    <property name="annotatedClasses">
      <list>
        <value>no.tfs.nf.api.Category</value>
        <value>no.tfs.nf.api.Clip</value>
        <value>no.tfs.nf.api.ClipCategory</value>
        <value>no.tfs.nf.api.Event</value>
        <value>no.tfs.nf.api.Team</value>
        <value>no.tfs.nf.api.Person</value>
        <value>no.tfs.nf.api.Tag</value>
        <value>no.tfs.nf.api.Type</value>
		<value>no.tfs.nf.api.Document</value>
		<value>no.tfs.nf.api.User</value>
		<value>no.tfs.nf.api.Playlist</value>
		<value>no.tfs.nf.api.Comment</value>
      </list>
    </property>
  </bean>
  
  <!--
  <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
    <property name="driverClass" value="org.h2.Driver"/>
    <property name="jdbcUrl" value="jdbc:h2:mem:nf"/>
    <property name="user" value="sa"/>
    <property name="password" value=""/>
  </bean>
  -->
  
  <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
    <property name="dataSource" ref="dataSource" />
  </bean>

  <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
    <property name="driverClass" value="org.postgresql.Driver"/>
    <property name="jdbcUrl" value="jdbc:postgresql:nf"/>
    <property name="user" value="nf"/>
    <property name="password" value="nf"/>
  </bean>
  
  <!-- Deletion -->
  
  <bean id="deletionInterceptor" class="no.tfs.nf.support.deletion.DeletionInterceptor"/>
  
  <aop:config>
	<aop:aspect ref="deletionInterceptor">
      <aop:before pointcut="execution( * no.tfs.nf.api.GenericService.delete(..) )" method="intercept" />
	</aop:aspect>
  </aop:config>
  
</beans>
